---

- name: Create VM disk
  gcp_compute_disk:
    name: 'disk-{{ name }}'
    state: present

    size_gb: 10
    source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-minimal-2004-lts'

    auth_kind: '{{ gcp_auth_kind }}'
    service_account_file: '{{ gcp_service_account_file }}'
    project: '{{ gcp_project }}'
    zone: '{{ zone }}'
  register: disk

- name: Create VM address
  gcp_compute_address:
    name: 'address-{{ name }}'
    state: present

    auth_kind: '{{ gcp_auth_kind }}'
    service_account_file: '{{ gcp_service_account_file }}'
    project: '{{ gcp_project }}'
    region: '{{ region }}'
  register: address
  when: static_ip is defined and static_ip == 'true'

- name: Create VM instance
  gcp_compute_instance:
    name: '{{ name }}'
    state: present
    
    machine_type: '{{ type }}'
    disks:
      - auto_delete: false
        boot: true
        source: '{{ disk }}'
    network_interfaces:
      - network: null
        access_configs:
          - name: 'External NAT'
            nat_ip: '{{ address }}'
            type: 'ONE_TO_ONE_NAT'
    scheduling:
      preemptible: '{{ preemptible | default("true") }}'
    labels:
      type: '{{ group }}'
    
    auth_kind: '{{ gcp_auth_kind }}'
    service_account_file: '{{ gcp_service_account_file }}'
    project: '{{ gcp_project }}'
    zone: '{{ zone }}'
  register: instance

- name: Wait for VM to start
  wait_for:
    host: '{{ instance.networkInterfaces[0].accessConfigs[0].natIP }}'
    port: 22
    delay: 10
    sleep: 1
    state: started

- name: Add host to inventory
  add_host:
    hostname: '{{ name }}'
    ansible_host: '{{ instance.networkInterfaces[0].accessConfigs[0].natIP }}'
    internal_ip: '{{ instance.networkInterfaces[0].networkIP }}'
    groupname: '{{ group }}'
