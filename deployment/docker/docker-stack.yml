version: "3.8"

networks:
    # network for App <-> Redis transactions
    misago-redis-in:
        driver: overlay
        internal: false # change to true
    # network for App <-> DB transactions
    misago-postgres-in:
        driver: overlay
        internal: false # change to true
    # network for App <-> Nginx transactions
    misago-nginx:
        driver: overlay
        internal: false # change to true
    # network for * <-> Celery transactions
    misago-celery:
        driver: overlay
        internal: false # change to true
    # this network faces the outside world
    misago-out:
        driver: overlay
        internal: false

services:
    web:
        image: vascoalramos/misago-web
        ports:
            - "80:80"
        environment:
            # use app service's hostname
            - APP_HOST=misago
            # talk to the port within the bridge network without (over)exposing ports
            - APP_PORT_NUMBER=80
            - HOST_MONITORING_TAG=nginx-
        networks:
            - misago-nginx
            - misago-out
        depends_on:
            - misago

    misago:
        image: vascoalramos/misago-app
        ports:
            - ${MISAGO_PORT}:80
        env_file: .env
        networks:
            - misago-redis-in
            - misago-postgres-in
            - misago-celery
            - misago-nginx
        depends_on:
            - postgres
            - redis

    postgres:
        image: postgres
        restart: unless-stopped
        ports:
            - ${POSTGRES_PORT}:5432
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks:
            - misago-postgres-in
        volumes:
            - database-data:/var/lib/postgresql/data/

    redis:
        image: redis
        command: redis-server --requirepass ${REDIS_PASSWORD}
        restart: unless-stopped
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - misago-redis-in
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}

    celery:
        image: vascoalramos/misago-celery
        command: /bin/bash -c "cd /opt/misago && celery -A devproject worker --loglevel=info"
        env_file: .env
        networks:
            - misago-redis-in
            - misago-postgres-in
            - misago-celery
        depends_on:
            - misago
            - postgres
            - redis

volumes:
    database-data:
