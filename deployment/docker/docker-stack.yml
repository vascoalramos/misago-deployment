version: "3.8"

networks:
    # network for App <-> Redis transactions
    misago-redis-in:
        driver: overlay
        internal: true
    # network for App <-> DB transactions
    misago-postgres-in:
        driver: overlay
        internal: true
    # network for App <-> Nginx transactions
    misago-nginx:
        driver: overlay
        internal: true
    # network for * <-> Celery transactions
    misago-celery:
        driver: overlay
        internal: true
    # network for redis <-> redis transactions
    misago-redis-internal:
        driver: overlay
        internal: true
    # this network faces the outside world
    misago-out:
        driver: overlay
        internal: false
    # this network is used to connect with elasticsearch instance
    monitor:
        driver: overlay
        internal: false

services:
    postgres:
        image: postgres
        ports:
            - ${POSTGRES_PORT}:5432
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks:
            - misago-postgres-in
            - monitor
        volumes:
            - /nfs/misago/pg:/var/lib/postgresql/data/:z
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    metricbeat:
        image: docker.elastic.co/beats/metricbeat:7.1.0
        ports:
            - 5066:5066
        networks:
            - monitor
        environment:
            - MONITOR_IP=${MONITOR_IP}
        volumes:
            - ./metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:ro
        depends_on:
            - postgres
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    redis-master:
        image: vascoalramos/misago-redis
        environment:
            - REDIS_REPLICATION_MODE=master
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - MONITOR_IP=${MONITOR_IP}
        networks:
            - monitor
            - misago-redis-internal
        ports:
            - 8010:6379
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    redis-slave-1:
        image: vascoalramos/misago-redis
        environment:
            - REDIS_REPLICATION_MODE=slave
            - REDIS_MASTER_HOST=${REDIS_MASTER_HOST}
            - REDIS_MASTER_PASSWORD=${REDIS_PASSWORD}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - MONITOR_IP=${MONITOR_IP}
        networks:
            - monitor
            - misago-redis-internal
        ports:
            - 8011:6379
        depends_on:
            - redis-master
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    redis-slave-2:
        image: vascoalramos/misago-redis
        environment:
            - REDIS_REPLICATION_MODE=slave
            - REDIS_MASTER_HOST=${REDIS_MASTER_HOST}
            - REDIS_MASTER_PASSWORD=${REDIS_PASSWORD}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - MONITOR_IP=${MONITOR_IP}
        networks:
            - monitor
            - misago-redis-internal
        ports:
            - 8012:6379
        depends_on:
            - redis-master
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    redis-sentinel:
        image: bitnami/redis-sentinel
        environment:
            - REDIS_MASTER_PASSWORD=${REDIS_PASSWORD}
            - REDIS_MASTER_HOST=${REDIS_MASTER_HOST}
            - MASTER=redis-master
            - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=${REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS}
            - REDIS_SENTINEL_FAILOVER_TIMEOUT=${REDIS_SENTINEL_FAILOVER_TIMEOUT}
            - REDIS_SENTINEL_QUORUM=${REDIS_SENTINEL_QUORUM}
        networks:
            - misago-redis-internal
        depends_on:
            - redis-master
            - redis-slave-1
            - redis-slave-2
        ports:
            - ${SENTINEL_PORT}:26379
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    redis-proxy:
        image: vascoalramos/misago-redis-haproxy
        depends_on:
            - redis-slave-1
            - redis-slave-2
            - redis-master
            - redis-sentinel
        ports:
            - 9000:9000
            - ${REDIS_PORT}:6379
        networks:
            - misago-redis-in
            - misago-redis-internal
        environment:
            - ADMIN_USERNAME=${ADMIN_USERNAME}
            - ADMIN_PASSWORD=${ADMIN_PASSWORD}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_HOSTS=redis-master, redis-slave-1, redis-slave-2
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    misago:
        image: vascoalramos/misago-app
        ports:
            - ${MISAGO_PORT}:80
        environment:
            - MISAGO_PORT=${MISAGO_PORT}
            - DJANGO_WSGI_MODULE=${DJANGO_WSGI_MODULE}
            - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - MONITOR_IP=${MONITOR_IP}
        networks:
            - misago-redis-in
            - misago-postgres-in
            - misago-celery
            - misago-nginx
        depends_on:
            - postgres
            - redis
        volumes:
            - /nfs/misago/static_files/:/static:rw
            - /nfs/misago/media_files/:/media:rw
        deploy:
            replicas: 3
            restart_policy:
                condition: on-failure

    celery:
        image: vascoalramos/misago-celery
        command: /bin/bash -c "cd /opt/misago && celery -A devproject worker --loglevel=info"
        environment:
            - MISAGO_PORT=${MISAGO_PORT}
            - DJANGO_WSGI_MODULE=${DJANGO_WSGI_MODULE}
            - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - MONITOR_IP=${MONITOR_IP}
        networks:
            - misago-redis-in
            - misago-postgres-in
            - misago-celery
        depends_on:
            - misago
            - postgres
            - redis
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    web:
        image: vascoalramos/misago-web
        ports:
            - 80:80
        environment:
            - APP_HOST=misago
            - APP_PORT_NUMBER=80
            - MONITOR_IP=${MONITOR_IP}
        networks:
            - misago-nginx
            - misago-out
        depends_on:
            - misago
        volumes:
            - /nfs/misago/static_files/:/static:r
            - /nfs/misago/media_files/:/media:r
        deploy:
            replicas: 3
            restart_policy:
                condition: on-failure
